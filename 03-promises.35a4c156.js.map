{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEIC,EAAQC,SAASC,cAAc,UAE/BC,EAAOF,SAASC,cAAc,SAE9BE,EAASH,SAASC,cAAc,WAkBpC,SAASG,EAAcC,EAAUC,GAE/B,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACWC,KAAKC,SAAW,GAElCJ,EAAQ,CACNK,SAAUT,EACVU,MAAOT,IAGTI,EAAO,CACLI,SAAUT,EACVU,MAAOT,G,GAGVA,E,IAaL,OAVAC,EACGS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUI,EAAKD,EAALF,MACnBI,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAoCC,OAAfR,EAAS,QAAYQ,OAANJ,EAAM,OAClEK,QAAQC,IAAI,uBAAwCF,OAAfR,EAAS,QAAYQ,OAANJ,EAAM,M,IAE3DO,OAAM,SAAAR,G,IAAGH,EAAQG,EAARH,SAAUY,EAAKT,EAALF,MACjBI,EAAAtB,GAASuB,OAAOO,QAAQ,oBAAmCL,OAAfR,EAAS,QAAYQ,OAANI,EAAM,OACjEH,QAAQC,IAAI,sBAAqCF,OAAfR,EAAS,QAAYQ,OAANI,EAAM,M,IAGnDnB,C,CA7CQP,SAASC,cAAc,SAC7B2B,iBAAiB,UAE3B,SAAyBC,GACvBA,EAACC,iBACF,IAAMC,EAAQC,SAAS7B,EAAO8B,OAE9BV,QAAQC,IAAIO,GAGT,IAAE,IAAIG,EAAI,EAAGA,EAAIH,EAAOG,IACzB9B,EAAc8B,EAAI,EAAGF,SAASjC,EAAMkC,OAAU/B,EAAK+B,MAAQC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// задержка времени\nlet delay = document.querySelector('#delay');\n// шаг\nlet step = document.querySelector('#step');\n// значение\nlet amount = document.querySelector('#amount');\n\nlet submitForm = document.querySelector('.form');\nsubmitForm.addEventListener('submit', callСreatePromise);\n\nfunction callСreatePromise(e) {\n  e.preventDefault();\n  const count = parseInt(amount.value);\n\n  console.log(count);\n\n  // i это position\n  for (let i = 0; i < count; i++) {\n    createPromise(i + 1, parseInt(delay.value) + (step.value * i));\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({\n          position: position,\n          delay: delay\n        });\n      } else {\n        reject({\n          position: position,\n          delay: delay\n        });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  return promise;\n}\n\n\n\n\n\n\n\n\n\n// const isSuccess = true;\n\n// const promise = new Promise((resolve, reject) => { \n// setTimeout(() => {\n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n// }, 1500);\n  \n  \n//   createPromise(position, delay)\n// });\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","promise","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","delay2","$parcel$interopDefault","Notify","success","concat","console","log","catch","delay3","failure","addEventListener","e","preventDefault","count","parseInt","value","i"],"version":3,"file":"03-promises.35a4c156.js.map"}