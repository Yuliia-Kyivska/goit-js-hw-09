{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEe,IAAXC,EAAQC,SAASC,cAAc,UAE/BC,EAAOF,SAASC,cAAc,SAE9BE,EAASH,SAASC,cAAc,WAkBpC,SAASG,EAAcC,EAAUC,GAE/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACWC,KAAKC,SAAW,GAElCJ,EAAQ,CACNK,SAAUT,EACVU,MAAOT,IAGTI,EAAO,CACLI,SAAUT,EACVU,MAAOT,GACP,GAEHA,EAAM,IAaX,OAVAC,EACGS,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACnBC,EAAArB,GAASsB,OAAOC,QAAQ,qBAAqBN,QAAeG,OAC5DI,QAAQC,IAAI,uBAAqBR,QAAiBG,MAAU,IAE7DM,OAAM,EAACT,SAAEA,EAAUC,MAAAS,MACjBN,EAAArB,GAASsB,OAAOM,QAAQ,oBAAoBX,QAAeU,OAC3DH,QAAQC,IAAI,sBAAoBR,QAAeU,MAAU,IAGrDjB,C,CA7CQP,SAASC,cAAc,SAC7ByB,iBAAiB,UAE3B,SAAyBC,GACvBA,EAACC,iBACF,MAAMC,EAAQC,SAAS3B,EAAO4B,OAE9BV,QAAQC,IAAIO,GAGT,IAAE,IAAIG,EAAI,EAAGA,EAAIH,EAAOG,IACzB5B,EAAc4B,EAAI,EAAGF,SAAS/B,EAAMgC,OAAU7B,EAAK6B,MAAQC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// задержка времени\nlet delay = document.querySelector('#delay');\n// шаг\nlet step = document.querySelector('#step');\n// значение\nlet amount = document.querySelector('#amount');\n\nlet submitForm = document.querySelector('.form');\nsubmitForm.addEventListener('submit', callСreatePromise);\n\nfunction callСreatePromise(e) {\n  e.preventDefault();\n  const count = parseInt(amount.value);\n\n  console.log(count);\n\n  // i это position\n  for (let i = 0; i < count; i++) {\n    createPromise(i + 1, parseInt(delay.value) + (step.value * i));\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({\n          position: position,\n          delay: delay\n        });\n      } else {\n        reject({\n          position: position,\n          delay: delay\n        });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  return promise;\n}\n\n\n\n\n\n\n\n\n\n// const isSuccess = true;\n\n// const promise = new Promise((resolve, reject) => { \n// setTimeout(() => {\n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n// }, 1500);\n  \n  \n//   createPromise(position, delay)\n// });\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position1","delay1","promise","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","delay2","$parcel$interopDefault","Notify","success","console","log","catch","delay3","failure","addEventListener","e","preventDefault","count","parseInt","value","i"],"version":3,"file":"03-promises.d0224cae.js.map"}